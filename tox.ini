[tox]
minversion = 3.1.1
envlist = py{27,36},functional,functional-py36,pep8
skipsdist = True
# Automatic envs (pyXX) will use the python version appropriate to that
# env and ignore basepython inherited from [testenv]. That's what we
# want, and we don't need to be warned about it.
ignore_basepython_conflict = True

[testenv]
basepython = python3
usedevelop = True
whitelist_externals =
  rm
install_command = pip install {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
   PYTHONWARNINGS=ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:site
   PYTHONDONTWRITEBYTECODE=1
# NOTE(rpodolyaka): allow passing of keystone credentials via env variables
passenv = OS_*
deps =
   -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt}
   -r{toxinidir}/test-requirements.txt
   -r{toxinidir}/requirements.txt
commands = stestr run {posargs}

# NOTE(cdent): Functional tests require a running openstack
# and OS_* variables in the environment to allow authentication.
# This is because the openstack client is called against a
# real cloud.
# NOTE(cdent): Do not set envdir here, for the sake of the
# gate functional jobs, which use the 'functional' path when
# copying files.
[testenv:functional]
basepython = python2.7
commands = stestr --test-path=./osc_placement/tests/functional run {posargs}

# Used by the python3 functional job in the gate.
[testenv:functional-py3]
commands =
  {[testenv:functional]commands}

[testenv:functional-py36]
envdir = {toxworkdir}/py36
commands =
  {[testenv:functional]commands}

[testenv:functional-py37]
envdir = {toxworkdir}/py37
commands =
  {[testenv:functional]commands}

[testenv:pep8]
envdir = {toxworkdir}/shared
commands = flake8 {posargs}

[testenv:venv]
commands = {posargs}

[testenv:cover]
envdir = {toxworkdir}/shared
setenv =
  {[testenv]setenv}
  PYTHON=coverage run --source osc_placement --parallel-mode
commands =
  coverage erase
  stestr run {posargs}
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml
  coverage report

[testenv:docs]
commands =
  rm -rf doc/build
  python setup.py build_sphinx

[testenv:releasenotes]
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:debug]
commands = oslo_debug_helper {posargs}

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build
